repo,path,content
kim-young-chul/SecureRepo,SECURITY.md,"b'# Security Policy\n\n## Supported Versions\n\nUse this section to tell people about which versions of your project are\ncurrently being supported with security updates.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 5.1.x   | :white_check_mark: |\n| 5.0.x   | :x:                |\n| 4.0.x   | :white_check_mark: |\n| < 4.0   | :x:                |\n\n## Reporting a Vulnerability\n\nUse this section to tell people how to report a vulnerability.\n\nTell them where to go, how often they can expect to get an update on a\nreported vulnerability, what to expect if the vulnerability is accepted or\ndeclined, etc.\n'"
mportizlunyov/update_full-unix,SECURITY.md,"b'Security Policy\n***\nIf an end-user discovers a vulnerability in the update_full-unix script, it can be reported to:\n< tangier_commiters@simplelogin.com >\n\nWhen disclosing a security vulnerability, please write everything into the text of the email.\nI WILL NOT LOOK AT EMAILS WITH ATTACHMENTS!\nPlease do not send any security notifications regarding any of package managers used.\nI cannot control anything of any package manager.\nMake sure that the security vulnerabilities are about the script itself.\n'"
oracle/oracle-db-appdev-monitoring,SECURITY.md,"b'# Reporting security vulnerabilities\n\nOracle values the independent security research community and believes that\nresponsible disclosure of security vulnerabilities helps us ensure the security\nand privacy of all our users.\n\nPlease do NOT raise a GitHub Issue to report a security vulnerability. If you\nbelieve you have found a security vulnerability, please submit a report to\n[secalert_us@oracle.com][1] preferably with a proof of concept. Please review\nsome additional information on [how to report security vulnerabilities to Oracle][2].\nWe encourage people who contact Oracle Security to use email encryption using\n[our encryption key][3].\n\nWe ask that you do not use other channels or contact the project maintainers\ndirectly.\n\nNon-vulnerability related security issues including ideas for new or improved\nsecurity features are welcome on GitHub Issues.\n\n## Security updates, alerts and bulletins\n\nSecurity updates will be released on a regular cadence. Many of our projects\nwill typically release security fixes in conjunction with the\n[Oracle Critical Patch Update][3] program. Additional\ninformation, including past advisories, is available on our [security alerts][4]\npage.\n\n## Security-related information\n\nWe will provide security related information such as a threat model, considerations\nfor secure use, or any known security issues in our documentation. Please note\nthat labs and sample code are intended to demonstrate a concept and may not be\nsufficiently hardened for production use.\n\n[1]: mailto:secalert_us@oracle.com\n[2]: https://www.oracle.com/corporate/security-practices/assurance/vulnerability/reporting.html\n[3]: https://www.oracle.com/security-alerts/encryptionkey.html\n[4]: https://www.oracle.com/security-alerts/\n'"
oracle/tribuo,SECURITY.md,"b'# Reporting security vulnerabilities\n\nOracle values the independent security research community and believes that\nresponsible disclosure of security vulnerabilities helps us ensure the security\nand privacy of all our users.\n\nPlease do NOT raise a GitHub Issue to report a security vulnerability. If you\nbelieve you have found a security vulnerability, please submit a report to\n[secalert_us@oracle.com][1] preferably with a proof of concept. Please review\nsome additional information on [how to report security vulnerabilities to Oracle][2].\nWe encourage people who contact Oracle Security to use email encryption using\n[our encryption key][3].\n\nWe ask that you do not use other channels or contact the project maintainers\ndirectly.\n\nNon-vulnerability related security issues including ideas for new or improved\nsecurity features are welcome on GitHub Issues.\n\n## Security updates, alerts and bulletins\n\nSecurity updates will be released on a regular cadence. Many of our projects\nwill typically release security fixes in conjunction with the\n[Oracle Critical Patch Update][3] program. Additional\ninformation, including past advisories, is available on our [security alerts][4]\npage.\n\n## Security-related information\n\nWe will provide security related information such as a threat model, considerations\nfor secure use, or any known security issues in our documentation. Please note\nthat labs and sample code are intended to demonstrate a concept and may not be\nsufficiently hardened for production use.\n\n[1]: mailto:secalert_us@oracle.com\n[2]: https://www.oracle.com/corporate/security-practices/assurance/vulnerability/reporting.html\n[3]: https://www.oracle.com/security-alerts/encryptionkey.html\n[4]: https://www.oracle.com/security-alerts/\n'"
kim-young-chul/SecureRepo,SECURITY.md,"b'# Security Policy\n\n## Supported Versions\n\nUse this section to tell people about which versions of your project are\ncurrently being supported with security updates.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 5.1.x   | :white_check_mark: |\n| 5.0.x   | :x:                |\n| 4.0.x   | :white_check_mark: |\n| < 4.0   | :x:                |\n\n## Reporting a Vulnerability\n\nUse this section to tell people how to report a vulnerability.\n\nTell them where to go, how often they can expect to get an update on a\nreported vulnerability, what to expect if the vulnerability is accepted or\ndeclined, etc.\n'"
mportizlunyov/update_full-unix,SECURITY.md,"b'Security Policy\n***\nIf an end-user discovers a vulnerability in the update_full-unix script, it can be reported to:\n< tangier_commiters@simplelogin.com >\n\nWhen disclosing a security vulnerability, please write everything into the text of the email.\nI WILL NOT LOOK AT EMAILS WITH ATTACHMENTS!\nPlease do not send any security notifications regarding any of package managers used.\nI cannot control anything of any package manager.\nMake sure that the security vulnerabilities are about the script itself.\n'"
oracle/oracle-db-appdev-monitoring,SECURITY.md,"b'# Reporting security vulnerabilities\n\nOracle values the independent security research community and believes that\nresponsible disclosure of security vulnerabilities helps us ensure the security\nand privacy of all our users.\n\nPlease do NOT raise a GitHub Issue to report a security vulnerability. If you\nbelieve you have found a security vulnerability, please submit a report to\n[secalert_us@oracle.com][1] preferably with a proof of concept. Please review\nsome additional information on [how to report security vulnerabilities to Oracle][2].\nWe encourage people who contact Oracle Security to use email encryption using\n[our encryption key][3].\n\nWe ask that you do not use other channels or contact the project maintainers\ndirectly.\n\nNon-vulnerability related security issues including ideas for new or improved\nsecurity features are welcome on GitHub Issues.\n\n## Security updates, alerts and bulletins\n\nSecurity updates will be released on a regular cadence. Many of our projects\nwill typically release security fixes in conjunction with the\n[Oracle Critical Patch Update][3] program. Additional\ninformation, including past advisories, is available on our [security alerts][4]\npage.\n\n## Security-related information\n\nWe will provide security related information such as a threat model, considerations\nfor secure use, or any known security issues in our documentation. Please note\nthat labs and sample code are intended to demonstrate a concept and may not be\nsufficiently hardened for production use.\n\n[1]: mailto:secalert_us@oracle.com\n[2]: https://www.oracle.com/corporate/security-practices/assurance/vulnerability/reporting.html\n[3]: https://www.oracle.com/security-alerts/encryptionkey.html\n[4]: https://www.oracle.com/security-alerts/\n'"
oracle/tribuo,SECURITY.md,"b'# Reporting security vulnerabilities\n\nOracle values the independent security research community and believes that\nresponsible disclosure of security vulnerabilities helps us ensure the security\nand privacy of all our users.\n\nPlease do NOT raise a GitHub Issue to report a security vulnerability. If you\nbelieve you have found a security vulnerability, please submit a report to\n[secalert_us@oracle.com][1] preferably with a proof of concept. Please review\nsome additional information on [how to report security vulnerabilities to Oracle][2].\nWe encourage people who contact Oracle Security to use email encryption using\n[our encryption key][3].\n\nWe ask that you do not use other channels or contact the project maintainers\ndirectly.\n\nNon-vulnerability related security issues including ideas for new or improved\nsecurity features are welcome on GitHub Issues.\n\n## Security updates, alerts and bulletins\n\nSecurity updates will be released on a regular cadence. Many of our projects\nwill typically release security fixes in conjunction with the\n[Oracle Critical Patch Update][3] program. Additional\ninformation, including past advisories, is available on our [security alerts][4]\npage.\n\n## Security-related information\n\nWe will provide security related information such as a threat model, considerations\nfor secure use, or any known security issues in our documentation. Please note\nthat labs and sample code are intended to demonstrate a concept and may not be\nsufficiently hardened for production use.\n\n[1]: mailto:secalert_us@oracle.com\n[2]: https://www.oracle.com/corporate/security-practices/assurance/vulnerability/reporting.html\n[3]: https://www.oracle.com/security-alerts/encryptionkey.html\n[4]: https://www.oracle.com/security-alerts/\n'"
oracle/tribuo,docs/Security.md,"b'# Security Considerations\n\nTribuo is a library designed to be incorporated into larger programs.\nTherefore, we consider the trust boundary to live somewhere outside of Tribuo\nin the larger program. While we provide data loaders, we expect them to be used\non trusted or cleaned data. We expect that the larger program will control\naccess to Tribuo\'s interfaces. Tribuo\'s data loaders and other interfaces\nperform defensive copying and other standard procedures when user code crosses\nover into Tribuo\'s internals. For performance reasons, however, this defensive\nbehavior is not generally the case for calls within Tribuo (e.g., the linear\nalgebra library exposes mutable state to reduce copying).\n\n## Serialized files\nTribuo models are stored as Java serialized objects. Due to the inherent issues\nwith Java serialization, these object files should only be loaded and saved to\ntrusted locations where third parties do not have access. We have provided a\n[JEP 290](https://openjdk.java.net/jeps/290) [filter](jep-290-filter.txt)\nwhich will allow the deserialization of only the classes found in the Tribuo\nlibrary. This filter should be enabled on the code paths which deserialize\nmodels or datasets. As Tribuo supports Java 8+, and JEP 290 is an addition to\nthe Java 8 API from 8u121, the best way to use the filter for the main \nprograms provided with Tribuo is by setting it as a process-wide flag.  \nAdditionally, when running with a security manager, Tribuo will need access to\nthe relevant filesystem locations to load or save model files. See the section \non [Configuration](#Configuration) for more details.\n\nIn Tribuo 4.3 we introduced protobuf based serialization for all supported Java\nserializable types. This is the preferred serialization mechanism, and Java\nserialization support will be removed in the next major release of Tribuo.\n\n## Database access\nTribuo provides a SQL interface that can load data via a JDBC connection. As\nit\'s frequently necessary to load data via a joined query from an unknown\nschema, Tribuo *does not* validate the input SQL. It is expected that the\nprogram developer will perform this validation since they know the schema from\nwhich they are loading. Tribuo supports connections via public key wallets via\nJDBC. To use this functionality, supply the wallet configuration to the JVM as\na system property and use the constructors that accept a java.util.Properties\ninstance with the appropriate configuration.\n\n## Native code\nTribuo uses several native libraries via JNI interfaces. Native code has\ndifferent considerations as compared to pure Java code because native code can\ncause issues in the running JVM. We are active contributors to all the native\nML libraries that Tribuo uses, and we fix issues upstream if we find them.\nNevertheless, you should think carefully before running a model that requires\nnative code inside an application container like a JavaEE or JakartaEE server.\nMultiple instances of Tribuo running inside separate containers may cause\nissues with JNI library loading due to ClassLoader security considerations.\n\n## SecurityManager configuration\nTribuo uses [OLCUT](https://github.com/oracle/olcut)\'s configuration and\nprovenance systems, which use reflection to construct and inspect classes.\nTherefore, when running with a Java security manager, you need to give the\nOLCUT jar appropriate permissions. We have tested this set of permissions,\nwhich allows the configuration and provenance systems to work:\n\n    // OLCUT permissions\n    grant codeBase ""file:/path/to/olcut/olcut-core-5.2.0.jar"" {\n            permission java.lang.RuntimePermission ""accessDeclaredMembers"";\n            permission java.lang.reflect.ReflectPermission ""suppressAccessChecks"";\n            permission java.util.logging.LoggingPermission ""control"";\n            permission java.io.FilePermission ""<<ALL FILES>>"", ""read"";\n            permission java.util.PropertyPermission ""*"", ""read,write"";\n    };\n\nThe read FilePermission can be restricted to the jars which contain\nconfiguration files, configuration files on disk, and the locations of\nserialised objects. The FilePermission in this example provides access to the\ncomplete filesystem because the necessary read locations are program specific.\nThis scope should be narrowed based on your requirements. If you need to save\nan OLCUT configuration, you will also need to add write permissions for the\nsave location.\n\nTribuo uses `ForkJoinPool` for parallelism, which requires the `modifyThread`\nand `modifyThreadGroup` privileges when running under a `java.lang.SecurityManager`.\nTherefore classes which have parallel execution inside will require those\npermissions in addition to the ones listed for OLCUT above.\n\nFile read and write permissions are necessary for Tribuo to be able to\nload and save models; therefore, you\'ll need to grant Tribuo those permissions\nusing a similar snippet when running with a security manager.\n\n## Threat Model\nAs a library incorporated into other programs, Tribuo expects it\'s inputs to be\nchecked by the wider program; however, there are threats which are specific to\nML systems that can result in model or data leakage.\n\n| Threat | Description | Exposed Assets | Possible Mitigations |\n| ------ | ----------- | -------------- | -------------------- |\n| Model replication | If an attacker can repeatedly query the model, where they either know or control the features, and they can observe the full prediction (e.g., the complete predicted probability distribution) for each query, then this can provide sufficient information for them to replicate the model.  If the model is considered an important asset, allowing an attacker to copy it could be detrimental. | The model parameters | Only return a small number of predictions (i.e., the top n) or do not provide the probability distribution. This slows down the attack, but does not completely prevent it. Other mitigations such as employing rate limiting or preventing the attacker from controlling or observing the feature inputs are necessary to fully prevent this attack.|\n| Training metadata leak | The model file contains information about the training data such as the feature names, number of features, and number of examples. This information is potentially sensitive, as in the case of bigrams or trigrams from text. | Training metadata | Firstly, treat model files as confidential if the data itself is confidential. Secondly, use Tribuo\'s methods for one-way hashing of the feature names. Hashing prevents attackers from trivially discovering the features without needing to complete the process of supplying the input text and testing if the model output changes. Thirdly, other information present in the model file, such as the number of examples, can be redacted by removing the provenance information before the model is deployed. | \n| Training data leak | If an attacker can repeatedly query the model, it\'s possible for an attacker to find specific training data points that are part of the training data set. This attack is accomplished by measuring the confidence of the prediction (as training data points usually have a predicted confidence close to 1.0). | Training data | The most important mitigation is to treat model files as confidential if the training data is confidential. Once access to the model has been prevented, the mitigations for model replication apply. This attack is a variant of model replication that usually requires some foreknowledge of the identity of the training corpus. |\n\n\n'"
roeegh/Asobiba,.github/SECURITY.md,"b'# Security Policy\n\n## Reporting a Vulnerability\n\nTo report a security issue, please email dev@roeegh.dev with a description of the issue, the steps you took to create the issue, affected versions, and, if known, mitigations for the issue. This project follows a 90 day disclosure timeline.\n'"
oracle/ocifs,SECURITY.md,"b'# Reporting security vulnerabilities\n\nOracle values the independent security research community and believes that\nresponsible disclosure of security vulnerabilities helps us ensure the security\nand privacy of all our users.\n\nPlease do NOT raise a GitHub Issue to report a security vulnerability. If you\nbelieve you have found a security vulnerability, please submit a report to\n[secalert_us@oracle.com][1] preferably with a proof of concept. Please review\nsome additional information on [how to report security vulnerabilities to Oracle][2].\nWe encourage people who contact Oracle Security to use email encryption using\n[our encryption key][3].\n\nWe ask that you do not use other channels or contact the project maintainers\ndirectly.\n\nNon-vulnerability related security issues including ideas for new or improved\nsecurity features are welcome on GitHub Issues.\n\n## Security updates, alerts and bulletins\n\nSecurity updates will be released on a regular cadence. Many of our projects\nwill typically release security fixes in conjunction with the\n[Oracle Critical Patch Update][3] program. Additional\ninformation, including past advisories, is available on our [security alerts][4]\npage.\n\n## Security-related information\n\nWe will provide security related information such as a threat model, considerations\nfor secure use, or any known security issues in our documentation. Please note\nthat labs and sample code are intended to demonstrate a concept and may not be\nsufficiently hardened for production use.\n\n[1]: mailto:secalert_us@oracle.com\n[2]: https://www.oracle.com/corporate/security-practices/assurance/vulnerability/reporting.html\n[3]: https://www.oracle.com/security-alerts/encryptionkey.html\n[4]: https://www.oracle.com/security-alerts/\n'"
DeveloperCron/MyIntro,SECURITY.md,"b'# Security Policy\n\nWe take security seriously at MyIntro. We appreciate any efforts to improve the security of our project, and we are committed to addressing security issues in a timely and responsible manner.\n\n## Reporting a Vulnerability\n\nIf you believe you have discovered a security vulnerability in our project, please report it to us as soon as possible. You can report security vulnerabilities by contacting DeveloperCron though discord/twitter.\n\nPlease include the following information in your report:\n\n- A description of the vulnerability\n- Steps to reproduce the vulnerability\n- Any other relevant information that could help us\n  address the issue\n\n## Expectations\n\nWhen reporting a security vulnerability, we ask that you:\n\nDo not publicly disclose the vulnerability until we have had a chance to address it.\nDo not exploit the vulnerability in any way beyond what is necessary to demonstrate the vulnerability.\nDo not modify or delete any data on our system.\n\n## Response\n\nWe will acknowledge your report within 48 hours and provide an estimated timeframe for addressing the vulnerability. We will also keep you informed of our progress and any necessary steps you need to take during the process.\n\n## Rewards\n\nWe believe in acknowledging the efforts of security researchers who help us improve the security of our project. If you report a security vulnerability to us, we will consider providing a reward or recognition for your efforts, at our discretion.\n\nThank you for helping us keep our project secure!\n'"
yaleman/renamer,SECURITY.md,"b'# Security Policy\n\n## Supported Versions\n\nTypically, only the latest released version is supported for patches - if a major issue appears, old ones will be considered for patching, or yanked.\n\n## Reporting a Vulnerability\n\nPlease contact me via email at james+renamer@terminaloutcomes.com'"
Codecademy/docs,content/cybersecurity/concepts/security-testing/security-testing.md,"b""---\nTitle: 'Security Testing'\nDescription: 'Security testing is a critical aspect of the software development life cycle that helps protect systems and applications from potential security threats.'\nSubjects:\n  - 'Cybersecurity'\nTags:\n  - 'Cybersecurity'\n  - 'Ethical Hacking'\n  - 'Infrastructure'\nCatalogContent:\n  - 'learn-security-testing'\n  - 'paths/cybersecurity'\n---\n\n**Security testing** is a critical aspect of software development that helps protect systems and applications from potential security threats.\n\n- It examines security, discovers weaknesses, and confirms compliance with industry standards and regulations.\n- With growing cyber attacks and data breaches, security testing is crucial to ensure the confidentiality, integrity, and availability of sensitive data.\n\nThere are three main methods for security testing:\n\n- Black Box Testing\n  - This approach to security testing evaluates a system or application without knowledge of its internal structure or implementation details. Black box testing focuses on functional requirements and the user interface, and can be used to identify security vulnerabilities that an attacker would exploit.\n- White Box Testing\n  - This approach to security testing evaluates a system or application with knowledge of its internal structure and implementation details. White box testing focuses on code-level security, including input validation, error handling, and access controls.\n- Gray Box Testing\n  - This approach to security testing combines elements of both black box and white box testing. Gray box testing provides some knowledge of the internal structure of a system or application, but not a complete understanding. This type of testing is useful for identifying security vulnerabilities that would be missed by black box testing but may not be as comprehensive as white box testing.\n\n### Additional Domains and Elements of Security Testing\n\n- Vulnerability assessment: This is the process of identifying, classifying, and prioritizing vulnerabilities in a system or application. Vulnerability assessments can be performed manually or with automated tools.\n- Penetration Testing: This type of testing simulates an attack on a system or application to identify security weaknesses and vulnerabilities. Penetration testing is usually performed by ethical hackers, who use the same tools and techniques as malicious hackers to identify potential security issues.\n- Network Security Testing: This type of testing focuses on the security of a network infrastructure, including firewalls, routers, and switches. Network security testing can identify vulnerabilities in network configurations and help prevent unauthorized access, data theft, and other security threats.\n- Application Security Testing: This type of testing focuses on the security of individual applications, including web applications, mobile apps, and desktop applications. Application security testing can identify vulnerabilities in the code, architecture, and deployment of an application.\n- Database Security Testing: This type of testing focuses on the security of databases and the sensitive data they contain. Database security testing can identify vulnerabilities in database configurations, access controls, data encryption, and help prevent unauthorized access to sensitive data.\n- Infrastructure Security Testing: This type of testing focuses on the security of an organization's infrastructure, including servers, storage devices, and other components that make up the backbone of an organization's IT environment. Infrastructure security testing can identify vulnerabilities in the configuration and deployment of infrastructure components.\n- Threat modeling: This is a process of identifying potential security threats to a system or application and determining the likelihood and impact of each threat. Threat modeling helps prioritize security testing efforts and identify areas that need improvement.\n- Compliance Testing: This type of testing verifies that a system or application complies with industry regulations and standards, such as PCI DSS, HIPAA, or ISO 27001. Compliance testing helps ensure that an organization's security practices meet the requirements of regulatory bodies and help prevent legal and financial consequences.\n- Remediation: After security weaknesses are identified during testing, remediation involves fixing the vulnerabilities and implementing security controls to prevent similar issues in the future.\n- Maintenance: Security testing should be an ongoing process to ensure the continued security of a system or application. Regular security testing, vulnerability assessments, and remediation are essential to maintaining the security of a system or application over time.\n"""
venom-mancer/OracleMind-discord,SECURITY.md,"b'# Security Policy\nfor not getting leaked on credentials and Tokens , i recommend if you ask me for `config.json` and not to leak it on internet or create your own tokens and  credentials\n## Supported Versions\n\nVersion 14011208 has no SECURITY issues yet\n\n## Reporting a Vulnerability\n\n'"
LuaSpace/luaspace,.github/SECURITY.md,b'# Security Policy\n\n## Supported Versions\n\nUse this section to tell people about which versions of your project are\ncurrently being supported with security updates.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| v1.0    | :white_check_mark: |\n\n## Reporting a Vulnerability\n\nGo to issues and report a vulnerability\n'
yaleman/dotfiles,SECURITY.md,"b'# Security Policy\n\n## Supported Versions\n\nTypically, only the latest released version is supported for patches - if a major issue appears, old ones will be considered for patching, or yanked.\n\n## Reporting a Vulnerability\n\nPlease contact me via email at james+dotfiles@terminaloutcomes.com'"
Normolo/directoryTreeViewer,.github/SECURITY.md,"b'# Security Policy\n\n## Supported Versions\n\nWe support the latest version of Folder Directory Tree Generator and the previous major version.\n\n## Reporting a Vulnerability\n\nIf you discover a security vulnerability in Folder Directory Tree Generator, please contact us at [INSERT CONTACT EMAIL]. We take security issues very seriously and will respond promptly to fix confirmed vulnerabilities.\n\nPlease do not publicly disclose the vulnerability until it has been resolved by our team.\n\n## Vulnerability Response\n\nOur team will investigate reported vulnerabilities and provide a timeline for fixing the issue. We will keep the reporter updated on our progress and coordinate the disclosure of the vulnerability.\n\n## End of Life Policy\n\nWhen a version of Folder Directory Tree Generator reaches end of life, we will no longer provide support or security updates for that version.\n\n## License\n\nThis project is licensed under the [MIT License](https://opensource.org/licenses/MIT).\n'"
oracle/weblogic-kubernetes-operator,documentation/4.0/content/faq/security-validation.md,"b'---\ntitle: ""Handling security validations""\ndate: 2020-06-30T08:55:00-05:00\ndraft: false\nweight: 14\ndescription: ""Why am I seeing these security warnings?""\n---\n\n> After applying the July2021 PSU, I\'m now seeing security warnings, such as:\n>\n> Description: Production Mode is enabled but user lockout settings are not secure in realm: myrealm, i.e. LockoutThreshold should not be greater than 5, LockoutDuration should not be less than 30.\n>\n> SOLUTION: Update the user lockout settings (LockoutThreshold, LockoutDuration) to be secure.\n\nWebLogic Server has a new, important feature to ensure and help you secure your WLS domains when running in production. With the July 2021 PSU applied, WebLogic Server regularly validates your domain configuration settings against a set of security configuration guidelines to determine whether the domain meets key security guidelines recommended by Oracle. For more information and additional details, see [MOS Doc 2788605.1](https://support.oracle.com/rs?type=doc&id=2788605.1) ""WebLogic Server Security Warnings Displayed Through the Admin Console"" and [Review Potential Security Issues](https://docs.oracle.com/en/middleware/fusion-middleware/weblogic-server/12.2.1.4/lockd/secure.html#GUID-4148D1BE-2D54-4DA5-8E94-A35D48DCEF1D) in _Securing a Production Environment for Oracle WebLogic Server_.\n\nWarnings may be at the level of the JDK, or that SSL is not enabled. Some warnings may recommend updating your WebLogic configuration. You can make the recommended configuration changes using an approach that depends on your [domain home source type]({{< relref ""/managing-domains/choosing-a-model/_index.md"" >}}):\n\n- For Domain in PV, use the WebLogic Scripting Tool (WLST), WebLogic Server Administration Console, WebLogic Deploy Tooling (WDT), or [configuration overrides]({{< relref ""/managing-domains/configoverrides/_index.md"" >}}).\n\n- For Domain in Image, create a new image with the recommended changes or use [configuration overrides]({{< relref ""/managing-domains/configoverrides/_index.md"" >}}).\n\n- For Model in Image, supply model files with the recommended changes in its image\'s `modelHome` directory or use [runtime updates]({{< relref ""/managing-domains/model-in-image/runtime-updates.md"" >}}).\n\n\n> Msg ID: 090985\n>\n> Description: Production Mode is enabled but the the file or directory /u01/oracle/user_projects/domains/domain/bin/setDomainEnv.sh is insecure since its permission is not a minimum of umask 027.\n>\n> SOLUTION: Change the file or directory permission to at most allow only write by owner, read by group.\n>\n> Description:  The file or directory SerializedSystemIni.dat is insecure since its permission is not a minimum of umask 027.\n>\n> SOLUTION: Change the file or directory permission to at most allow only write by owner, read by group.\n\nWhen the [WebLogic Image Tool](https://oracle.github.io/weblogic-image-tool/) (WIT) creates a [Domain Home in Image]({{< relref ""/managing-domains/choosing-a-model/_index.md"" >}}), you can specify the `--target OpenShift` option so that when WIT creates the domain, it sets the correct permissions in the domain home. When no `--target` option is specified, then the domain home directory has a umask of 027.\n\n{{% notice note %}}\nFor information about handling file permission warnings on the OpenShift Kubernetes Platform, see the [OpenShift]({{<relref ""/security/openshift.md"">}}) documentation.\n{{% /notice %}}\n'"
oracle/weblogic-kubernetes-operator,documentation/3.4/content/faq/security-validation.md,"b'---\ntitle: ""Handling security validations""\ndate: 2020-06-30T08:55:00-05:00\ndraft: false\nweight: 15\ndescription: ""Why am I seeing these security warnings?""\n---\n\n> After applying the July2021 PSU, I\'m now seeing security warnings, such as:\n>\n> Description: Production Mode is enabled but user lockout settings are not secure in realm: myrealm, i.e. LockoutThreshold should not be greater than 5, LockoutDuration should not be less than 30.\n>\n> SOLUTION: Update the user lockout settings (LockoutThreshold, LockoutDuration) to be secure.\n\nWebLogic Server has a new, important feature to ensure and help you secure your WLS domains when running in production. With the July 2021 PSU applied, WebLogic Server regularly validates your domain configuration settings against a set of security configuration guidelines to determine whether the domain meets key security guidelines recommended by Oracle. For more information and additional details, see [MOS Doc 2788605.1](https://support.oracle.com/rs?type=doc&id=2788605.1) ""WebLogic Server Security Warnings Displayed Through the Admin Console"" and [Review Potential Security Issues](https://docs.oracle.com/en/middleware/fusion-middleware/weblogic-server/12.2.1.4/lockd/secure.html#GUID-4148D1BE-2D54-4DA5-8E94-A35D48DCEF1D) in _Securing a Production Environment for Oracle WebLogic Server_.\n\nWarnings may be at the level of the JDK, or that SSL is not enabled. Some warnings may recommend updating your WebLogic configuration. You can make the recommended configuration changes using an approach that depends on your [domain home source type]({{< relref ""/userguide/managing-domains/choosing-a-model/_index.md"" >}}):\n\n- For Domain in PV, use the WebLogic Scripting Tool (WLST), WebLogic Server Administration Console, WebLogic Deploy Tooling (WDT), or [configuration overrides]({{< relref ""/userguide/managing-domains/configoverrides/_index.md"" >}}).\n\n- For Domain in Image, create a new image with the recommended changes or use [configuration overrides]({{< relref ""/userguide/managing-domains/configoverrides/_index.md"" >}}).\n\n- For Model in Image, supply model files with the recommended changes in its image\'s `modelHome` directory or use [runtime updates]({{< relref ""/userguide/managing-domains/model-in-image/runtime-updates.md"" >}}).\n\n\n> Msg ID: 090985\n>\n> Description: Production Mode is enabled but the the file or directory /u01/oracle/user_projects/domains/domain/bin/setDomainEnv.sh is insecure since its permission is not a minimum of umask 027.\n>\n> SOLUTION: Change the file or directory permission to at most allow only write by owner, read by group.\n>\n> Description:  The file or directory SerializedSystemIni.dat is insecure since its permission is not a minimum of umask 027.\n>\n> SOLUTION: Change the file or directory permission to at most allow only write by owner, read by group.\n\nWhen the [WebLogic Image Tool](https://oracle.github.io/weblogic-image-tool/) (WIT) creates a [Domain Home in Image](https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/choosing-a-model/), you can specify the `--target OpenShift` option so that when WIT creates the domain, it sets the correct permissions in the domain home. When no `--target` option is specified, then the domain home directory has a umask of 027.\n\n{{% notice note %}}\nFor information about handling file permission warnings on the OpenShift Kubernetes Platform, see the [OpenShift]({{<relref ""/security/openshift.md"">}}) documentation.\n{{% /notice %}}\n'"
oracle/weblogic-kubernetes-operator,documentation/3.3/content/faq/security-validation.md,"b'---\ntitle: ""Handling security validations""\ndate: 2020-06-30T08:55:00-05:00\ndraft: false\nweight: 14\ndescription: ""Why am I seeing these security warnings?""\n---\n\n> After applying the July2021 PSU, I\'m now seeing security warnings, such as:\n>\n> Description: Production Mode is enabled but user lockout settings are not secure in realm: myrealm, i.e. LockoutThreshold should not be greater than 5, LockoutDuration should not be less than 30.\n>\n> SOLUTION: Update the user lockout settings (LockoutThreshold, LockoutDuration) to be secure.\n\nWebLogic Server has a new, important feature to ensure and help you secure your WLS domains when running in production. With the July 2021 PSU applied, WebLogic Server regularly validates your domain configuration settings against a set of security configuration guidelines to determine whether the domain meets key security guidelines recommended by Oracle. For more information and additional details, see [MOS Doc 2788605.1](https://support.oracle.com/rs?type=doc&id=2788605.1) ""WebLogic Server Security Warnings Displayed Through the Admin Console"" and [Review Potential Security Issues](https://docs.oracle.com/en/middleware/fusion-middleware/weblogic-server/12.2.1.4/lockd/secure.html#GUID-4148D1BE-2D54-4DA5-8E94-A35D48DCEF1D) in _Securing a Production Environment for Oracle WebLogic Server_.\n\nWarnings may be at the level of the JDK, or that SSL is not enabled. Some warnings may recommend updating your WebLogic configuration. You can make the recommended configuration changes using an approach that depends on your [domain home source type]({{< relref ""/userguide/managing-domains/choosing-a-model/_index.md"" >}}):\n\n- For Domain in PV, use the WebLogic Scripting Tool (WLST), WebLogic Server Administration Console, WebLogic Deploy Tooling (WDT), or [configuration overrides]({{< relref ""/userguide/managing-domains/configoverrides/_index.md"" >}}).\n\n- For Domain in Image, create a new image with the recommended changes or use [configuration overrides]({{< relref ""/userguide/managing-domains/configoverrides/_index.md"" >}}).\n\n- For Model in Image, supply model files with the recommended changes in its image\'s `modelHome` directory or use [runtime updates]({{< relref ""/userguide/managing-domains/model-in-image/runtime-updates.md"" >}}).\n\n\n> Msg ID: 090985\n>\n> Description: Production Mode is enabled but the the file or directory /u01/oracle/user_projects/domains/domain/bin/setDomainEnv.sh is insecure since its permission is not a minimum of umask 027.\n>\n> SOLUTION: Change the file or directory permission to at most allow only write by owner, read by group.\n>\n> Description:  The file or directory SerializedSystemIni.dat is insecure since its permission is not a minimum of umask 027.\n>\n> SOLUTION: Change the file or directory permission to at most allow only write by owner, read by group.\n\nWhen the [WebLogic Image Tool](https://oracle.github.io/weblogic-image-tool/) (WIT) creates a [Domain Home in Image](https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/choosing-a-model/), you can specify the `--target OpenShift` option so that when WIT creates the domain, it sets the correct permissions in the domain home. When no `--target` option is specified, then the domain home directory has a umask of 027.\n\n{{% notice note %}}\nFor information about handling file permission warnings on the OpenShift Kubernetes Platform, see the [OpenShift chapter]({{<relref ""/security/openshift.md"">}}) in the Security section.\n{{% /notice %}}\n'"
oracle/weblogic-toolkit-ui,SECURITY.md,"b'# Reporting security vulnerabilities\n\nOracle values the independent security research community and believes that\nresponsible disclosure of security vulnerabilities helps us ensure the security\nand privacy of all our users.\n\nPlease do NOT raise a GitHub Issue to report a security vulnerability. If you\nbelieve you have found a security vulnerability, please submit a report to\n[secalert_us@oracle.com][1] preferably with a proof of concept. Please review\nsome additional information on [how to report security vulnerabilities to Oracle][2].\nWe encourage people who contact Oracle Security to use email encryption using\n[our encryption key][3].\n\nWe ask that you do not use other channels or contact the project maintainers\ndirectly.\n\nNon-vulnerability related security issues including ideas for new or improved\nsecurity features are welcome on GitHub Issues.\n\n## Security updates, alerts and bulletins\n\nSecurity updates will be released on a regular cadence. Many of our projects\nwill typically release security fixes in conjunction with the\n[Oracle Critical Patch Update][3] program. Additional\ninformation, including past advisories, is available on our [security alerts][4]\npage.\n\n## Security-related information\n\nWe will provide security related information such as a threat model, considerations\nfor secure use, or any known security issues in our documentation. Please note\nthat labs and sample code are intended to demonstrate a concept and may not be\nsufficiently hardened for production use.\n\n[1]: mailto:secalert_us@oracle.com\n[2]: https://www.oracle.com/corporate/security-practices/assurance/vulnerability/reporting.html\n[3]: https://www.oracle.com/security-alerts/encryptionkey.html\n[4]: https://www.oracle.com/security-alerts/\n'"
